
#https://dev.to/erezhod/setting-up-a-nestjs-project-with-docker-for-back-end-development-30lg
# https://www.grottedubarbu.fr/docker-nginx-reverse-proxy/

version: '3.8'
services:
  reverse_proxy:
    depends_on:
      - backend
      - frontend
      - postgres
    volumes:
      - ./reverse_proxy/data_to_container/nginx.temp:/etc/nginx/nginx.temp
    build:
      context: ./reverse_proxy
      dockerfile: ./Dockerfile
    container_name: reverse_proxy
    # command: /bin/sh -c "envsubst '$${APP_HOST} $${REACT_APP_RP_BACK_URL} $${REACT_APP_RP_FRONT_URL} '< /etc/nginx/nginx.temp > /etc/nginx/nginx.conf && openssl req -x509 -newkey rsa:4096 -keyout /etc/ssl/pong.key -out /etc/ssl/.pong.csr -days 365 -nodes -subj '/CN=nginx.csejault' && exec nginx -g 'daemon off;'"
    # command: /bin/sh /home/nginx/start.sh
    command: /bin/sh /home/nginx/entrypoint.sh
    restart: unless-stopped
    env_file:
    - ./.env
    ports:
       - 4443:443

  frontend:
    depends_on:
      - backend
    container_name: frontend
    build:
      context: ./frontend
      target: development
      dockerfile: ./Dockerfile
    command: sh /home/node/scripts/dev_entrypoint.sh
    volumes:
      - ./frontend/react:/usr/src/app/
      - ./frontend/scripts/:/home/node/scripts/
    restart: unless-stopped
    env_file:
    - ./.env
    ports:
       - 3000:3000
    
  backend:
    depends_on:
    - postgres
    container_name: backend
    build:
      context: ./backend
      target: development
      dockerfile: ./Dockerfile
    volumes:
      - ./backend/data_to_container/pong/:/usr/src/app/
    command: sh /home/node/dev_entrypoint.sh
    restart: unless-stopped
    env_file:
    - ./.env

  postgres:
    container_name: postgres
    image: postgres:latest
    volumes:
      - pgVolume:/var/lib/postgresql/data
    restart: always
    env_file:
    - ./.env
    ports:
      - "3020:3020"

  pg_admin:
    depends_on:
    - postgres
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    env_file:
    - ./.env
    ports:
      - "3030:80"

volumes:
  pgVolume: