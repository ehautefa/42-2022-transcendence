
#https://dev.to/erezhod/setting-up-a-nestjs-project-with-docker-for-back-end-development-30lg
# https://www.grottedubarbu.fr/docker-nginx-reverse-proxy/

version: '3.8'
services:
  reverse_proxy:
    depends_on:
      - frontend
    volumes:
      - sslVolume:/etc/ssl/pong/
    build:
      context: ./reverse_proxy
      dockerfile: ./Dockerfile
    container_name: reverse_proxy
    command: /bin/sh /home/nginx/entrypoint.sh
    restart: unless-stopped
    env_file:
    - env/.env
    - env/urls.env
    ports:
       - 4443:443

  frontend:
    depends_on:
      - backend
    container_name: frontend
    build:
      context: ./frontend
      target: development
      dockerfile: ./Dockerfile
    command: sh /home/node/dev_entrypoint.sh
    volumes:
      - sslVolume:/etc/ssl/pong/
    restart: unless-stopped
    env_file:
    - env/.env
    - env/urls.env
    - env/pong.env
    - env/frontend.env
    
  backend:
    depends_on:
    - postgres
    container_name: backend
    image: nestjs-api-dev:1.0.0
    build:
      context: ./backend
      target: development
      dockerfile: ./Dockerfile
    volumes:
      - sslVolume:/etc/ssl/pong/
    command: sh /home/node/dev_entrypoint.sh
    restart: unless-stopped
    env_file:
    - env/.env
    - env/.secret.env
    - env/urls.env
    - env/backend.env
    - env/pong.env
    - env/postgres.env

  postgres:
    container_name: postgres
    image: postgres:latest
    volumes:
      - pgVolume:/var/lib/postgresql/data
    restart: always
    env_file:
    - env/.env
    - env/postgres.env

volumes:
  pgVolume:
  sslVolume: